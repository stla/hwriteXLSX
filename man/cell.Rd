% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hwriteXLSX.R
\name{cell}
\alias{cell}
\title{General cell}
\usage{
cell(col, row, value, colspan = NULL, rowspan = NULL, comment = NULL,
  commentAuthor = NULL, numberFormat = NULL, fontname = NULL,
  bold = NULL, color = NULL, fill = NULL)
}
\arguments{
\item{col}{integer, the column index}

\item{row}{integer, the row index}

\item{value}{cell value, a numeric or character scalar}

\item{colspan}{integer, number of columns the cell spans}

\item{rowspan}{integer, number of rows the cell spans}

\item{comment}{cell comment, character}

\item{commentAuthor}{author of the comment, character}

\item{numberFormat}{number format; see Details}

\item{fontname}{font name; see Details}

\item{bold}{set \code{TRUE} for bold font}

\item{color}{color name; see Details}

\item{fill}{color name; see Details}
}
\value{
A named list representing a cell.
}
\description{
Creates a general cell.
}
\details{
The number format can be a predefined format or a custom format, such
as \code{"yyyy-mm-dd;@"}. Predefined number formats are illustrated in the examples.
The font name must be a name available in Excel, such as \code{"Courier"} or
\code{"Verdana"}.
The color name must be a name among the ones returned by \code{grDevices::colors()};
see the example of \code{\link{json2xlsx}} or \code{\link{hwriteXLSX}}.
}
\examples{
A1 <- cell(1, 1, 9.9, numberFormat="2Decimal")
B3 <- cell(2, 3, "abc", bold=TRUE, color="red", comment="this cell is red")
sheet <- list(Sheet1 = c(A1, B3))
# JSON string ready for json2xlsx
json <- jsonlite::toJSON(sheet, null="null", auto_unbox = TRUE)
\donttest{json2xlsx(json, outfile="xlsx.xlsx")}
# predefined number formats
numericFormats <-
  c(
    "General",
    "Zero",
    "2Decimal",
    "Max3Decimal",
    "ThousandSeparator2Decimal",
    "Percent",
    "Percent2Decimal",
    "Exponent2Decimal",
    "SingleSpacedFraction",
    "DoubleSpacedFraction",
    "ThousandsNegativeParens",
    "ThousandsNegativeRed",
    "Thousands2DecimalNegativeParens",
    "Tousands2DecimalNEgativeRed",
    "Exponent1Decimal",
    "TextPlaceHolder"
  )
dateFormats <-
  c(
    "MmSs",
    "OptHMmSs",
    "MmSs1Decimal",
    "MmDdYy",
    "DMmmYy",
    "DMmm",
    "MmmYy",
    "HMm12Hr",
    "HMmSs12Hr",
    "HMm",
    "HMmSs",
    "MdyHMm"
  )
A <- lapply(seq_along(numericFormats),
            function(i) cell(1, i, value=numericFormats[i]))
B <- lapply(seq_along(numericFormats),
            function(i) cell(2, i, value=-9999.1234,
                             numberFormat=numericFormats[i]))
sheet1 <- list(numericFormats = do.call(c, c(A,B)))
A <- lapply(seq_along(dateFormats),
            function(i) cell(1, i, value=dateFormats[i]))
B <- lapply(seq_along(dateFormats),
            function(i) cell(2, i, value=10000,
                             numberFormat=dateFormats[i]))
sheet2 <- list(dateFormats = do.call(c, c(A,B)))
json <- jsonlite::toJSON(c(sheet1, sheet2), null="null", auto_unbox = TRUE)
\donttest{json2xlsx(json, outfile="numberFormats.xlsx")}
}
\seealso{
\code{\link{cellDate}} to create a cell for a date.
}
